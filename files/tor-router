#!/bin/bash
RULES="/var/tmp/tor-router.save"

# Tor's TransPort
TRANS_PORT="9040"
function startTR()
{
	if test -f "$RULES"; then
		echo "$RULES exists. Either delete it, or stop tor-router first."
		exit 1
	else
		iptables-save >$RULES
		# Executable file to create rules for transparent proxy
		# Destinations you do not want routed through Tor
		NON_TOR="192.168.1.0/24 192.168.0.0/24"
		# the UID Tor runs as, actually only support for Debian, ArchLinux and Fedora as been added.
		if command -v pacman >/dev/null; then
			TOR_UID=$(id -u tor)
		elif command -v apt >/dev/null; then
			TOR_UID=$(id -u debian-tor)
		elif command -v dnf >/dev/null; then
			TOR_UID=$(id -u toranon)
		else
			echo "Unknown distro, please create report the issue to https://github.com/edu4rdshl/tor-router/issues"
			exit 1
		fi

		if ! command -v tor >/dev/null; then
			echo "You need to install the tor package."
			exit 1
		elif ! systemctl is-active tor.service >/dev/null; then
			echo "The tor service is not active, please start the tor service before running the script."
			exit 1
		elif ! command -v iptables >/dev/null; then
			echo "You need to install the iptables package."
			exit 1
		else
			# init iptables roules
			iptables -F
			iptables -t nat -F
			# set iptables nat
			iptables -t nat -A OUTPUT -m owner --uid-owner "$TOR_UID" -j RETURN

			# set dns redirect
			iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 5353

			# executable local addresses			
			for NET in $NON_TOR 127.0.0.0/9 127.128.0.0/10 127.0.0.0/8;; do
				iptables -t nat -A OUTPUT -d "$NET" -j RETURN
				iptables -A OUTPUT -d "$NET" -j ACCEPT
			done

			# redirect all other output through TOR
			iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TRANS_PORT
			iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports "$TRANS_PORT"
	  		iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports "$TRANS_PORT"

			# accept already established connections
			iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

			# allow only tor output
			iptables -A OUTPUT -m owner --uid-owner "$TOR_UID" -j ACCEPT
			iptables -A OUTPUT -j REJECT
		fi
	fi
}
function stopTR()
{
	if test -f "$RULES"; then
		echo "Restoring previous rules from $RULES"
		iptables -t nat -F
		iptables-restore <"$RULES"
		rm "$RULES"
	else
		echo "$RULES does not exist. Not doing anything."
		exit
	fi

}
function restartTR()
{
	stopTR
	sleep 2
	startTR
}

case "$1" in
start)
	startTR
	;;
stop)
	stopTR
	;;
restart)
	restartTR
	;;
*)
	echo "Usage: $0 {start|stop|restart}"
	;;
esac
